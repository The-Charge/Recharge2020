// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.commands;

import java.util.Map;

import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.shuffleboard.BuiltInWidgets;
import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;
import edu.wpi.first.wpilibj.shuffleboard.ShuffleboardTab;
import frc.robot.Robot;

/**
 *
 */
public class Shoot extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private double m_speed;
    private ShuffleboardTab LiveWindowTab = Shuffleboard.getTab("LiveWindow");
    private NetworkTableEntry SpeedWidget = LiveWindowTab.add("Speed", 0).withWidget(BuiltInWidgets.kNumberBar)
            .getEntry();

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Shoot(double speed) {

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_speed = speed;
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.shooter);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        Robot.shooter.initSpeedMode();
        // Robot.shooter.setPercentSpeedPID(m_speed);
        double YAxisNum = Robot.oi.buttonBox.getRawAxis(1);
      //  ShuffleboardTab LiveWindowTab = Shuffleboard.getTab("LiveWindow");
      //  NetworkTableEntry SpeedWidget = LiveWindowTab.add("Speed", YAxisNum).withWidget(BuiltInWidgets.kNumberBar)
       //
              //  .getEntry();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        double YAxisVal = Robot.oi.buttonBox.getRawAxis(1);
        //Robot.shooter.setPercentSpeedPID(YAxisVal);
        SpeedWidget.setNumber(YAxisVal);
        //theoretically, this updates the "SpeedWidget", which right now I have just
        //displaying the speed of the shooter
        }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.shooter.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        end();
    }
}

// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import frc.robot.Robot;

/**
 *
 */
public class TurretDrive extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private double m_rotation;
    private double m_elevation;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    private final double MIN_ANGLE = 34.4;
    private final double MAX_ANGLE = 57.4;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TurretDrive(double rotation, double elevation) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_rotation = rotation;
        m_elevation = elevation;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.turret);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        //Rotation control of the turret:
        // double turretturn;

        // turretturn = -Robot.oi.buttonBox.getY();

        // Robot.turret.run(turretturn);

        //Elevation control of the turret:

        // ----Scale Mode:----

        double actuatorDistance;
        actuatorDistance = -Robot.oi.leftJoystick.getY();
        actuatorDistance += 1;
        actuatorDistance /= 2;
        


        // ----Degree Mode:----
        // //In degree mode, actuatorDistance needs to be changed from the pot scale of 0-1 to some degree scale that is TBD
        

        // //This makes sure the sent angle is within doable range
        // if(targetAngle > MAX_ANGLE)
        //     targetAngle = MAX_ANGLE;
        // else if(targetAngle < MIN_ANGLE)
        //     targetAngle = MIN_ANGLE;

        
        // // This line uses the Law of Cosines to find the total length
        // //  of the actuator based on some other values from the CAD team:
        // //  c^2 = a^2 + b^2 - 2abCos(C):
        // actuatorDistance = Math.sqrt(Math.pow(Robot.turret.TURRET_SIDE_A, 2) + Math.pow(Robot.turret.TURRET_SIDE_B, 2) - 2 * Robot.turret.TURRET_SIDE_A * Robot.turret.TURRET_SIDE_B * Math.cos(Math.toRadians(94.4 - targetAngle)));
        
        // //Subtracting the length of the actuator while not extended
        // actuatorDistance -= 218; //218 is what the actuator blueprints says is the "Closed Length (hole to hole)"

        // //Normalizing the distance to a scale of 0 to 1
        // actuatorDistance /= 140; //140 is what the actuator blueprints says is the max the actuator can extend from the base

        actuatorDistance *= 0.6;    //These two lines change the normalization from 0-1 to 0.2-0.8,
        actuatorDistance += .2;     // the actual operating values of our linear actuator

        Robot.turret.getElevationServo().set(actuatorDistance);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.turret.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        end();
    }
}

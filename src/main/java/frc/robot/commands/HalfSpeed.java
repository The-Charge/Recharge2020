// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.commands;
import edu.wpi.first.wpilibj.command.InstantCommand;
import frc.robot.Robot;

/**
 *
 */
// FIXME: There's an inconsistency here. Would strongly recommend having an in-person review with whoever wrote this command.
// I could see it being an instant command *if* it's a toggle (ie: sets some sort of DriveTrain.halfspeed)
// However, it's not doing that. Instead it's doing tank drive, but half speed.
// If you want to keep the latter (which I'm guessing is a wihle held), 
//      would be better to include this as part of TankDrive.java. 
//      This keeps in line with the "DRY" (don't repeat yourself) principle in case we change drive styles (ie: tank to clayton)
// If you want to keep the former, see InvertDrive for a good example of a toggle
// Same thing with QuarterSpeed
public class HalfSpeed extends InstantCommand {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public HalfSpeed() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called once when this command runs
    @Override
    protected void initialize() {
        Robot.drivetrain.setPercentVBus();
    }

    @Override
    protected void execute() {
        double leftSpeed, rightSpeed;
        rightSpeed = -Robot.oi.rightJoystick.getY() * .5;
        leftSpeed = -Robot.oi.leftJoystick.getY() * .5;

        Robot.drivetrain.run(leftSpeed, rightSpeed);
  
    }
    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.drivetrain.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        end();
    }
    

}
